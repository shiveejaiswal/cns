#include <stdio.h>
#include <ctype.h>
#include <string.h>

#define MAX_SIZE 100

void encrypt(char *plaintext, char *key, char *ciphertext);
void decrypt(char *ciphertext, char *key, char *decryptedtext);
void generatekey(char *plaintext, char *key, char *newkey);

int main() {
    char plaintext[MAX_SIZE];
    char key[MAX_SIZE];
    char newkey[MAX_SIZE];
    char ciphertext[MAX_SIZE];
    char decryptedtext[MAX_SIZE];

    printf("Enter the plain text:\n");
    fgets(plaintext, MAX_SIZE, stdin);
    plaintext[strcspn(plaintext, "\n")] = 0;

    printf("Enter the key:\n");
    fgets(key, MAX_SIZE, stdin);
    key[strcspn(key, "\n")] = 0;

    generatekey(plaintext, key, newkey);

    encrypt(plaintext, newkey, ciphertext);
    printf("The msg after encryption is: %s\n", ciphertext);

    decrypt(ciphertext, newkey, decryptedtext);
    printf("Decrypted msg: %s\n", decryptedtext);

    return 0;
}

void generatekey(char *plaintext, char *key, char *newkey) {
    int keyLen = strlen(key);
    int textLen = strlen(plaintext);
    int i = 0;
    int j = 0;
    for (i = 0; i < textLen; i++) {
        if (isalpha(plaintext[i])) {
            newkey[i] = toupper(key[j % keyLen]);  // Ensure key is in uppercase
            j++;
        } else {
            newkey[i] = plaintext[i];  // Copy non-alphabetic characters directly
        }
    }
    newkey[i] = '\0';  // Null-terminate the new key
}

void encrypt(char *plaintext, char *key, char *ciphertext) {
    int textLen = strlen(plaintext);
    for (int i = 0; i < textLen; i++) {
        if (isalpha(plaintext[i])) {
            if (isupper(plaintext[i])) {
                ciphertext[i] = ((plaintext[i] - 'A' + (key[i] - 'A')) % 26) + 'A';
            } else if (islower(plaintext[i])) {
                ciphertext[i] = ((plaintext[i] - 'a' + (key[i] - 'A')) % 26) + 'a';
            }
        } else {
            ciphertext[i] = plaintext[i];  // Copy non-alphabetic characters directly
        }
    }
    ciphertext[textLen] = '\0';  // Null-terminate the ciphertext
}

void decrypt(char *ciphertext, char *key, char *decryptedtext) {
    int textLen = strlen(ciphertext);
    for (int i = 0; i < textLen; i++) {
        if (isalpha(ciphertext[i])) {
            if (isupper(ciphertext[i])) {
                decryptedtext[i] = ((ciphertext[i] - 'A' - (key[i] - 'A') + 26) % 26) + 'A';
            } else if (islower(ciphertext[i])) {
                decryptedtext[i] = ((ciphertext[i] - 'a' - (key[i] - 'A') + 26) % 26) + 'a';
            }
        } else {
            decryptedtext[i] = ciphertext[i];  // Copy non-alphabetic characters directly
        }
    }
    decryptedtext[textLen] = '\0';  // Null-terminate the decrypted text
}
